Search.setIndex({"docnames": ["coord_trans", "data_reporter", "decorator", "etl", "geocode", "geometry", "index", "installation", "niubility", "stat", "util"], "filenames": ["coord_trans.rst", "data_reporter.rst", "decorator.rst", "etl.rst", "geocode.rst", "geometry.rst", "index.rst", "installation.rst", "niubility.rst", "stat.rst", "util.rst"], "titles": ["\u5750\u6807\u8f6c\u6362", "\u6570\u636e\u62a5\u544a", "\u88c5\u9970\u5668", "\u6570\u636e\u8bfb\u53d6\u3001\u5904\u7406\u4e0e\u4fdd\u5b58", "Geocoding", "\u5730\u7406\u5904\u7406", "ricco \u6587\u6863", "\u5b89\u88c5", "\u2605\u2605\u5b9e\u7528\u65b9\u6cd5\u63a8\u8350\u2605\u2605", "\u7edf\u8ba1\u5206\u6790", "\u5de5\u5177\u96c6"], "terms": {"class": [0, 1, 3, 4, 5, 8, 10], "function": [0, 2, 3, 4, 5, 9, 10], "ricco": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "geometri": [0, 3, 5, 8, 10], "coord_tran": 0, "srs": [0, 4, 6], "object": [0, 3, 10], "spatial": 0, "refer": 0, "system": 0, "attribut": [0, 10], "bd09": [0, 4], "gcj02": [0, 4], "wgs84": [0, 4], "world": 0, "geodet": 0, "1984": 0, "coord_trans_geom": [0, 6], "df": [0, 3, 4, 5, 8, 9, 10], "srs_from": 0, "str": [0, 1, 3, 4, 5, 8, 9, 10], "srs_to": 0, "c_geometri": [0, 5, 8], "geometry_format": [0, 5, 8], "none": [0, 1, 2, 3, 4, 5, 8, 10], "datafram": [0, 1, 3, 4, 5, 8, 9, 10], "coord_trans_x2i": [0, 6], "c_lng": [0, 4], "lng": [0, 4, 5, 8], "c_lat": [0, 4], "lat": [0, 4, 5, 8], "coord_transform_geojson": [0, 6], "obj": 0, "dict": [0, 3, 5, 8, 10], "from_sr": 0, "to_sr": 0, "geojson": [0, 3, 5, 8], "param": [0, 3, 10], "coord_transform": [0, 6], "out_of_china": [0, 6], "etl": [1, 3, 7, 8, 9], "data_report": 1, "datareport": 1, "data": [1, 3], "panda": [1, 3, 4, 5, 8, 10], "core": [1, 3, 4, 5, 8, 10], "frame": [1, 3, 4, 5, 8, 10], "onli": 1, "list": [1, 3, 4, 5, 7, 8, 10], "exclud": 1, "docx": 1, "method": [1, 10], "basic": 1, "col_by_col": 1, "examine_al": 1, "file_path": [1, 3, 8], "preprocess": 1, "util": [2, 5, 10], "decor": 2, "as_staticmethod": [2, 6], "cls": 2, "staticmethod": 2, "check_nul": [2, 6], "default_rv": 2, "check_shap": [2, 6], "func": [2, 3, 8, 10], "shape": [2, 3, 5, 7, 10], "check_str": [2, 6], "print_doc": [2, 6], "docstr": 2, "process_multi": [2, 6], "appli": 2, "parallel_appli": 2, "progress": [2, 6], "tqdm": 2, "progress_appli": 2, "run_onc": [2, 6], "timer": [2, 6], "desc": 2, "get_kml_df_with_level": 3, "gdf_dict": 3, "geodatafram": [3, 6, 8], "key": [3, 4, 10], "valu": [3, 10], "level": 3, "gpd": 3, "kml_df_create_level": 3, "name": [3, 7, 10], "o1": 3, "rdf": [3, 8], "sheet_nam": [3, 8], "sheet_contain": [3, 8], "encod": [3, 8], "info": [3, 8], "bool": [3, 4, 5, 8, 10], "fals": [3, 4, 5, 8, 10], "dtype": [3, 8], "column": [3, 8, 10], "nrow": [3, 8], "int": [3, 4, 5, 8, 10], "recurs": [3, 8, 10], "true": [3, 4, 5, 8, 10], "csv": [3, 8, 10], "xlsx": [3, 8], "xls": [3, 8], "shp": [3, 8], "parquet": [3, 8], "pickl": [3, 8], "feather": [3, 8], "kml": [3, 8], "ovkml": [3, 8], "json": [3, 8, 10], "sheet": [3, 8], "rdf_by_dir": [3, 8], "dir_path": [3, 10], "ext": [3, 8, 10], "ignore_index": 3, "sign_data_from": 3, "col_data_from": 3, "__data_from": 3, "rdxls": 3, "excel": [3, 8, 10], "read_all_sheet": 3, "ignore_diff_column": 3, "read_csv": 3, "kwarg": [3, 4, 8], "pd": [3, 5, 8, 10], "read_gdb": 3, "gdb": 3, "read_kml": 3, "keep_level": 3, "separate_fold": 3, "polygon": [3, 5, 8], "multipolygon": [3, 5, 8], "or": [3, 10], "read_line_json": 3, "utf": 3, "read_shapefil": 3, "shapefil": 3, "read_shapefile_with_driv": 3, "dbf": 3, "read_spss": 3, "spss": 3, "sav": 3, "convert_d": 3, "mode": [3, 10], "first": [3, 10], "last": [3, 10], "convert_to_float": 3, "rex_method": [3, 10], "mean": [3, 5, 8, 10], "float": [3, 5, 8, 10], "max": 3, "min": 3, "create_column": 3, "df_iter": 3, "chunksiz": [3, 8], "part": [3, 8], "dict2df": 3, "c_key": 3, "c_valu": 3, "as_index": 3, "drop_by_df": 3, "df_delet": 3, "expand_dict": 3, "c_src": 3, "expand_dict_sil": 3, "expand_graph": 3, "start_level": [3, 10], "id": 3, "c_level_typ": 3, "level_typ": 3, "c_parent_key": 3, "parent_id": 3, "c_info": 3, "fillna_by_ad": 3, "col": [3, 9, 10], "filter_by_df": 3, "df_sizer": 3, "revers": [3, 10], "df_size": 3, "fix_nul": 3, "nan": [3, 10], "nat": 3, "fuzz_df": 3, "target_seri": 3, "seri": [3, 5, 10], "c_dst": [3, 5, 8], "valid_scor": [3, 10], "60": 3, "_target": 3, "is_chang": 3, "df_old": 3, "df_new": 3, "key_col": [3, 5, 10], "value_col": 3, "c_res": 3, "keep_best_uniqu": 3, "subset": 3, "null_if_in": 3, "rolling_by_month": 3, "c_date": 3, "c_group": 3, "month": [3, 10], "agg": [3, 5, 8, 10], "sum": [3, 5, 8], "round_by_column": 3, "split_list_to_row": 3, "split_to_row": 3, "delimit": 3, "table2dict": 3, "orient": 3, "split": 3, "record": 3, "index": [3, 5, 8], "update_df": 3, "new_df": 3, "on": 3, "overwrit": [3, 8, 10], "error": [3, 10], "ignor": 3, "other": [3, 10], "cell": 3, "na": [3, 5, 10], "rais": [3, 10], "target": 3, "valueerror": 3, "overlap": 3, "wrap_dict": 3, "c_srcs": 3, "extra": 3, "wrap": 3, "to_csv_by_lin": 3, "filenam": [3, 8], "to_fil": [3, 8], "filepath": [3, 8, 10], "log": [3, 8, 10], "to_parquet": 3, "wkb": [3, 5, 8], "to_parts_fil": 3, "dirpath": [3, 10], "to_ext": [3, 8], "to_sheet": 3, "df_iter_by_column": 3, "by": [3, 4, 5, 8], "null": 3, "dir_file_to_x": [3, 8], "from_dir": [3, 8], "to_dir": [3, 8], "from_ext": [3, 8], "delet": [3, 5, 8], "file_to_x": [3, 8], "gdb2csv": 3, "output_path": 3, "with_geometri": 3, "geom_format": [3, 5], "merge_csv_fil": 3, "output_fil": 3, "csv_dir": 3, "reshape_fil": [3, 8], "100000": [3, 8], "split2x": [3, 8], "fn": [3, 8, 10], "split2x_by_chunks": 3, "50000": 3, "split2x_by_part": 3, "split_csv_by_column": 3, "merge_fil": 3, "entropi": 3, "entropyclass": 3, "neg_col": 3, "gevalu": 3, "pca_scor": 3, "pca": 3, "pvalu": 3, "rescal": 3, "scale_min": 3, "scale_max": 3, "score_rang": 3, "tupl": [3, 5, 10], "100": [3, 4, 10], "standard_": 3, "standard_e_neg": 3, "wvalu": 3, "get_graph_dict": 3, "graph_df": 3, "c_parent_typ": 3, "parent_typ": 3, "query_from_graph": 3, "graph_data": 3, "max_depth": 3, "10": [3, 10], "address": 4, "citi": [4, 5, 8, 10], "sourc": 4, "key_baidu": 4, "key_amap": 4, "baidu": 4, "amap": 4, "baidu_poi": 4, "amap_poi": 4, "geocode_best": [4, 6], "address_typ": 4, "sig": 4, "80": [4, 10], "address_geocod": 4, "poi": [4, 5, 8], "geocode_best_address": [4, 6], "geocode_best_poi": [4, 6], "geocode_df": [4, 6], "with_detail": 4, "ignore_exist": 4, "auto_load": 5, "basegeometri": 5, "crs_sh2000": 5, "2000": 5, "crs": [5, 8], "deg_to_decim": 5, "123": [5, 10], "77": 5, "distanc": 5, "p1": 5, "p2": 5, "epsg_from": 5, "4326": 5, "epsg_to": 5, "epsg": [5, 8], "dumps2x": 5, "ensure_lnglat": 5, "lnglat": 5, "ensure_multi_geom": 5, "geom": 5, "base": [5, 10], "basemultipartgeometri": 5, "point": [5, 8, 10], "linestr": 5, "multi": 5, "multipoint": 5, "multilinestr": 5, "ensure_valid_polygon": 5, "epsg_from_lnglat": 5, "utm": 5, "filter_polygon_from_collect": 5, "geometrycollect": 5, "geojson_dump": 5, "geojson_load": 5, "warn": [5, 8, 10], "get_epsg": 5, "get_inner_point": 5, "within": 5, "infer_geom_format": 5, "is_geojson": 5, "is_shap": 5, "is_valid_lnglat": 5, "is_wkb": 5, "is_wkt": 5, "wkt": [5, 8], "lng_from_citi": 5, "multiline2multipolygon": 5, "multiline_shap": 5, "forc": 5, "multilin": 5, "split_multi_geom": 5, "text2lnglat": 5, "text": [5, 10], "point_sep": 5, "lnglat_sep": 5, "text2shap": 5, "geometry_typ": 5, "ensure_multi": 5, "line": [5, 8], "ss": 5, "121": 5, "4737": 5, "31": 5, "2304": 5, "4740": 5, "2307": 5, "474": 5, "wkb_dump": 5, "hex": 5, "srid": 5, "wkb_load": 5, "wkt_dump": 5, "wkt_load": 5, "auto2shap": [5, 8], "auto2x": [5, 8], "buffer": 5, "radius": [5, 8], "geo_typ": [5, 8], "buffer_geometri": [5, 8], "geo_format": [5, 8], "numer": [5, 8], "distance_gdf": 5, "df_target": [5, 8], "left_geometri": 5, "distance_min": 5, "ensure_geometri": 5, "ensure_point": [5, 8], "geojson2shap": 5, "epsg_cod": 5, "get_area": [5, 8], "area": [5, 8], "decim": [5, 8], "code": [5, 8], "get_neighbor": 5, "geopanda": [5, 7, 8], "res_typ": 5, "lnglat2shap": 5, "lnglat2wkb": 5, "lnglat2wkt": 5, "mark_tags_v2": [5, 8], "point_df": [5, 8], "polygon_df": [5, 8], "col_list": [5, 8], "predic": [5, 8], "intersect": [5, 8], "drop_geometri": [5, 8], "point_lng": [5, 8], "point_lat": [5, 8], "point_geometri": [5, 8], "polygon_geometri": [5, 8], "warning_messag": [5, 8], "sjoin": [5, 8], "nearest_kdtre": [5, 8], "df_poi": [5, 8], "c_count": [5, 8], "count": [5, 8], "c_min_dist": [5, 8], "min_dist": [5, 8], "limit": [5, 8, 10], "keep_origin": [5, 8], "leaf_siz": [5, 8, 10], "kdtree": [5, 6, 8], "nearest_neighbor": [5, 8], "project": [5, 8], "geomdatafram": [5, 8], "projection_lnglat": [5, 8], "shapely2central_shap": 5, "shapely2geojson": 5, "shapely2lnglat": 5, "default": 5, "shapely2wkb": 5, "shapely2wkt": 5, "shapely2x": [5, 8], "spatial_agg": [5, 8], "union": [5, 8], "split_grid": 5, "step": [5, 10], "split_multi_to_row": 5, "wkb2lnglat": 5, "wkb2shape": 5, "wkb2wkt": 5, "wkt2lnglat": 5, "wkt2shape": 5, "wkt2wkb": 5, "topolog": 5, "fix_topolog": 5, "fill_intersect": 5, "keep_contain": 5, "is_topology_valid": 5, "jupyt": 6, "extract": [6, 8], "transform": 6, "load": [6, 8], "file": [6, 8], "graph": 6, "geocod": 6, "python": 7, "pip": 7, "instal": 7, "conda": 7, "creat": 7, "activ": 7, "shapely2": 7, "post1": 7, "11": 7, "kernel": 7, "chang": 7, "ipykernel": 7, "user": 7, "display": 7, "kernelspec": 7, "uninstal": 7, "99": 8, "from": 8, "import": 8, "path": [8, 10], "test": 8, "path_dir": 8, "as": 8, "1000": 8, "def": 8, "process": 8, "return": [8, 10], "path_dir_to": 8, "df_plate": 8, "plate": 8, "plate_nam": 8, "stat": 9, "describe_auto": 9, "describe_d": 9, "describe_object": 9, "describe_seri": 9, "suspect_series_typ": 9, "agg_pars": 10, "ensure_ext": 10, "ensure_list": 10, "val": 10, "collect": 10, "is_empti": 10, "np": 10, "not_empti": 10, "second_to_desc": 10, "second": 10, "2m": 10, "3s": 10, "1234": 10, "20m": 10, "40s": 10, "123456": 10, "1d": 10, "10h": 10, "17m": 10, "36s": 10, "second_to_dhm": 10, "warn_": 10, "msg": 10, "if_or_not": 10, "and_": 10, "condit": 10, "and": 10, "check_diff": 10, "ls1": 10, "ls2": 10, "diff": 10, "drop_repeat_el": 10, "eval_": 10, "extract_num": 10, "string": 10, "num_typ": 10, "join_list": 10, "ignore_pct": 10, "multi_warn": 10, "numpi": 10, "first_notnull_valu": 10, "fix_str": 10, "fuzz_match": 10, "string_set": 10, "fix_string_set": 10, "fuzz_pair": 10, "score": 10, "50": 10, "get_city_id_by_nam": 10, "get_shortest_el": 10, "element": 10, "get_uuid": 10, "uuid": 10, "house_type_format": 10, "interchange_dict": 10, "dic": 10, "is_digit": 10, "is_hex": 10, "is_unique_seri": 10, "ignore_na": 10, "is_valid_uuid": 10, "uuid_to_test": 10, "version": 10, "isinstance_in_list": 10, "type": 10, "list2dict": 10, "or_": 10, "per2float": 10, "physical_ag": 10, "birthday": 10, "datetim": 10, "deadlin": 10, "pinyin": 10, "word": 10, "re_fast": 10, "pattern": 10, "relstrip": 10, "kwd": 10, "remove_null_in_dict": 10, "rerstrip": 10, "rstrip_d0": 10, "130": 10, "segment": 10, "gap": 10, "set": 10, "sep": 10, "unit": 10, "bottom": 10, "top": 10, "num1": 10, "num2": 10, "sort_by_list": 10, "src_list": 10, "by_list": 10, "filter_": 10, "filter": 10, "to_bool": 10, "t_list": 10, "f_list": 10, "coerc": 10, "to_float": 10, "to_json_str": 10, "to_str_list": 10, "union_list_v2": 10, "union_str_v2": 10, "abc": 10, "dt": 10, "date": 10, "format": 10, "dst_format": 10, "date_mov": 10, "year": 10, "day": 10, "properti": 10, "day_half_year_ago": 10, "first_day_of_this_month": 10, "last_day_of_this_month": 10, "monday_of_this_week": 10, "one_year_ago": 10, "the_day_after_tomorrow": 10, "the_day_before_yesterday": 10, "today": 10, "tomorrow": 10, "yesterday": 10, "dt2": 10, "date_format": 10, "get": 10, "auto2d": 10, "excel2d": 10, "date_typ": 10, "ymd": 10, "is_valid_d": 10, "to_str": 10, "os": 10, "osspath": 10, "bucket": 10, "driver": 10, "path_ful": 10, "path_short": 10, "count_fil": 10, "dir2zip": 10, "delete_origin": 10, "dir_it": 10, "root": 10, "abspath": 10, "ignore_hidden_fil": 10, "dir_iter_list": 10, "ensure_dir": 10, "ensure_dirpath_exist": 10, "extens": 10, "file2zip": 10, "zip": 10, "find_undefined_dir": 10, "path_nam": 10, "protect_dir": 10, "remove_ds_stor": 10, "ds_store": 10, "remove_path": 10, "rm_scratch_fil": 10, "rm_hidden_fil": 10, "single_ext": 10, "path_list": 10, "split_path": 10, "strs": 10, "drop_repeat_str": 10, "min_length": 10, "max_length": 10, "drop_repeat_string_by_step": 10, "extract_c": 10, "extract_possible_region": 10, "get_break": 10, "length": 10, "rubric": 10, "get_city_and_region": 10, "get_list_by_posit": 10, "break": 10, "15": 10, "get_single_list": 10, "start": 10, "assert": 10, "assert_columns_exist": 10, "assert_not_empty_str": 10, "skip_if_not_exist": 10, "assert_not_nul": 10, "assert_series_digit": 10, "assert_series_not_lik": 10, "assert_series_uniqu": 10, "assert_subset": 10, "superset": 10, "assert_values_in": 10, "enum": 10, "skip_column": 10, "district": 10, "if_not_uniqu": 10, "all": 10, "city_list": 10, "city_nam": 10, "is_citi": 10, "is_region": 10, "provinc": 10, "province_nam": 10, "region_list": 10, "resourc": 10, "bd_region": 10, "city_region_list": 10, "get_bd_region": 10, "io": 10, "region": 10, "random": 10, "ramdom_lnglat": 10, "lng_rang": 10, "72": 10, "138": 10, "lat_rang": 10, "56": 10, "random_by_prob": 10, "map": 10, "random_d": 10, "random_nam": 10, "random_room_numb": 10, "filter_by_dist": 10, "ind": 10, "dist": 10, "filter_by_limit": 10, "ls": 10, "kdtree_nearest": 10, "xy_tre": 10, "xy_queri": 10, "kdtree_queri": 10, "kdtree_query_radius": 10}, "objects": {"ricco": [[10, 0, 0, "-", "base"]], "ricco.base": [[10, 1, 1, "", "agg_parser"], [10, 1, 1, "", "ensure_ext"], [10, 1, 1, "", "ensure_list"], [10, 1, 1, "", "is_empty"], [10, 1, 1, "", "not_empty"], [10, 1, 1, "", "second_to_desc"], [10, 1, 1, "", "second_to_dhms"], [10, 1, 1, "", "warn_"]], "ricco.etl.data_reporter": [[1, 2, 1, "", "DataReporter"]], "ricco.etl.data_reporter.DataReporter": [[1, 3, 1, "", "basic"], [1, 3, 1, "", "col_by_col"], [1, 3, 1, "", "examine_all"], [1, 3, 1, "", "preprocess"]], "ricco.etl": [[3, 0, 0, "-", "entropy"], [3, 0, 0, "-", "extract"], [3, 0, 0, "-", "file"], [3, 0, 0, "-", "graph"], [3, 0, 0, "-", "load"], [9, 0, 0, "-", "stat"], [3, 0, 0, "-", "transformer"]], "ricco.etl.entropy": [[3, 2, 1, "", "EntropyClass"], [3, 1, 1, "", "entropy"], [3, 1, 1, "", "gevalue"], [3, 1, 1, "", "pca_score"], [3, 1, 1, "", "pvalue"], [3, 1, 1, "", "rescale"], [3, 1, 1, "", "standard_e"], [3, 1, 1, "", "standard_e_neg"], [3, 1, 1, "", "wvalue"]], "ricco.etl.extract": [[3, 1, 1, "", "get_kml_df_with_level"], [3, 1, 1, "", "kml_df_create_level"], [3, 1, 1, "", "rdf"], [3, 1, 1, "", "rdf_by_dir"], [3, 1, 1, "", "rdxls"], [3, 1, 1, "", "read_all_sheets"], [3, 1, 1, "", "read_csv"], [3, 1, 1, "", "read_gdb"], [3, 1, 1, "", "read_kml"], [3, 1, 1, "", "read_line_json"], [3, 1, 1, "", "read_shapefile"], [3, 1, 1, "", "read_shapefile_with_driver"], [3, 1, 1, "", "read_spss"]], "ricco.etl.file": [[3, 1, 1, "", "df_iter_by_column"], [3, 1, 1, "", "dir_file_to_x"], [3, 1, 1, "", "file_to_x"], [3, 1, 1, "", "gdb2csv"], [3, 1, 1, "", "merge_csv_files"], [3, 1, 1, "", "reshape_files"], [3, 1, 1, "", "split2x"], [3, 1, 1, "", "split2x_by_chunksize"], [3, 1, 1, "", "split2x_by_parts"], [3, 1, 1, "", "split_csv_by_column"]], "ricco.etl.graph": [[3, 1, 1, "", "get_graph_dict"], [3, 1, 1, "", "query_from_graph"]], "ricco.etl.load": [[3, 1, 1, "", "to_csv_by_line"], [3, 1, 1, "", "to_file"], [3, 1, 1, "", "to_parquet"], [3, 1, 1, "", "to_parts_file"], [3, 1, 1, "", "to_sheets"]], "ricco.etl.stat": [[9, 1, 1, "", "describe_auto"], [9, 1, 1, "", "describe_date"], [9, 1, 1, "", "describe_object"], [9, 1, 1, "", "describe_series"], [9, 1, 1, "", "suspect_series_type"]], "ricco.etl.transformer": [[3, 1, 1, "", "convert_date"], [3, 1, 1, "", "convert_to_float"], [3, 1, 1, "", "create_columns"], [3, 1, 1, "", "df_iter"], [3, 1, 1, "", "dict2df"], [3, 1, 1, "", "drop_by_df"], [3, 1, 1, "", "expand_dict"], [3, 1, 1, "", "expand_dict_silent"], [3, 1, 1, "", "expand_graph"], [3, 1, 1, "", "fillna_by_adding"], [3, 1, 1, "", "filter_by_df"], [3, 1, 1, "", "fix_null"], [3, 1, 1, "", "fuzz_df"], [3, 1, 1, "", "is_changed"], [3, 1, 1, "", "keep_best_unique"], [3, 1, 1, "", "null_if_in"], [3, 1, 1, "", "rolling_by_month"], [3, 1, 1, "", "round_by_columns"], [3, 1, 1, "", "split_list_to_row"], [3, 1, 1, "", "split_to_rows"], [3, 1, 1, "", "table2dict"], [3, 1, 1, "", "update_df"], [3, 1, 1, "", "wrap_dict"]], "ricco.geocode": [[4, 0, 0, "-", "geocode"]], "ricco.geocode.geocode": [[4, 1, 1, "", "geocode"], [4, 1, 1, "", "geocode_best"], [4, 1, 1, "", "geocode_best_address"], [4, 1, 1, "", "geocode_best_poi"], [4, 1, 1, "", "geocode_df"]], "ricco.geometry": [[0, 0, 0, "-", "coord_trans"], [5, 0, 0, "-", "df"], [5, 0, 0, "-", "topology"], [5, 0, 0, "-", "util"]], "ricco.geometry.coord_trans": [[0, 2, 1, "", "SRS"], [0, 1, 1, "", "coord_trans_geom"], [0, 1, 1, "", "coord_trans_x2y"], [0, 1, 1, "", "coord_transform_geojson"], [0, 1, 1, "", "coord_transformer"], [0, 1, 1, "", "out_of_china"]], "ricco.geometry.coord_trans.SRS": [[0, 4, 1, "", "bd09"], [0, 4, 1, "", "gcj02"], [0, 4, 1, "", "wgs84"]], "ricco.geometry.df": [[5, 1, 1, "", "auto2shapely"], [5, 1, 1, "", "auto2x"], [5, 1, 1, "", "buffer"], [5, 1, 1, "", "distance_gdf"], [5, 1, 1, "", "distance_min"], [5, 1, 1, "", "ensure_geometry"], [5, 1, 1, "", "ensure_lnglat"], [5, 1, 1, "", "geojson2shapely"], [5, 1, 1, "", "get_area"], [5, 1, 1, "", "get_neighbors"], [5, 1, 1, "", "lnglat2shapely"], [5, 1, 1, "", "lnglat2wkb"], [5, 1, 1, "", "lnglat2wkt"], [5, 1, 1, "", "mark_tags_v2"], [5, 1, 1, "", "nearest_kdtree"], [5, 1, 1, "", "nearest_neighbor"], [5, 1, 1, "", "projection"], [5, 1, 1, "", "projection_lnglat"], [5, 1, 1, "", "shapely2central_shapely"], [5, 1, 1, "", "shapely2geojson"], [5, 1, 1, "", "shapely2lnglat"], [5, 1, 1, "", "shapely2wkb"], [5, 1, 1, "", "shapely2wkt"], [5, 1, 1, "", "shapely2x"], [5, 1, 1, "", "spatial_agg"], [5, 1, 1, "", "split_grids"], [5, 1, 1, "", "split_multi_to_rows"], [5, 1, 1, "", "wkb2lnglat"], [5, 1, 1, "", "wkb2shapely"], [5, 1, 1, "", "wkb2wkt"], [5, 1, 1, "", "wkt2lnglat"], [5, 1, 1, "", "wkt2shapely"], [5, 1, 1, "", "wkt2wkb"]], "ricco.geometry.topology": [[5, 1, 1, "", "fix_topology"], [5, 1, 1, "", "is_topology_valid"]], "ricco.geometry.util": [[5, 1, 1, "", "auto_loads"], [5, 1, 1, "", "crs_sh2000"], [5, 1, 1, "", "deg_to_decimal"], [5, 1, 1, "", "distance"], [5, 1, 1, "", "dumps2x"], [5, 1, 1, "", "ensure_lnglat"], [5, 1, 1, "", "ensure_multi_geom"], [5, 1, 1, "", "ensure_valid_polygon"], [5, 1, 1, "", "epsg_from_lnglat"], [5, 1, 1, "", "filter_polygon_from_collection"], [5, 1, 1, "", "geojson_dumps"], [5, 1, 1, "", "geojson_loads"], [5, 1, 1, "", "get_epsg"], [5, 1, 1, "", "get_inner_point"], [5, 1, 1, "", "infer_geom_format"], [5, 1, 1, "", "is_geojson"], [5, 1, 1, "", "is_shapely"], [5, 1, 1, "", "is_valid_lnglat"], [5, 1, 1, "", "is_wkb"], [5, 1, 1, "", "is_wkt"], [5, 1, 1, "", "lng_from_city"], [5, 1, 1, "", "multiline2multipolygon"], [5, 1, 1, "", "split_multi_geoms"], [5, 1, 1, "", "text2lnglats"], [5, 1, 1, "", "text2shapely"], [5, 1, 1, "", "wkb_dumps"], [5, 1, 1, "", "wkb_loads"], [5, 1, 1, "", "wkt_dumps"], [5, 1, 1, "", "wkt_loads"]], "ricco.resource": [[10, 0, 0, "-", "bd_region"]], "ricco.resource.bd_region": [[10, 1, 1, "", "cities"], [10, 1, 1, "", "city_region_list"], [10, 1, 1, "", "get_bd_region"], [10, 1, 1, "", "regions"]], "ricco.util": [[10, 0, 0, "-", "assertion"], [2, 0, 0, "-", "decorator"], [10, 0, 0, "-", "dt"], [10, 0, 0, "-", "kdtree"], [10, 0, 0, "-", "os"], [10, 0, 0, "-", "random"], [10, 0, 0, "-", "strings"], [10, 0, 0, "-", "util"]], "ricco.util.assertion": [[10, 1, 1, "", "assert_columns_exists"], [10, 1, 1, "", "assert_not_empty_str"], [10, 1, 1, "", "assert_not_null"], [10, 1, 1, "", "assert_series_digit"], [10, 1, 1, "", "assert_series_not_like"], [10, 1, 1, "", "assert_series_unique"], [10, 1, 1, "", "assert_subset"], [10, 1, 1, "", "assert_values_in"], [10, 1, 1, "", "skip_column"]], "ricco.util.decorator": [[2, 1, 1, "", "as_staticmethod"], [2, 1, 1, "", "check_null"], [2, 1, 1, "", "check_shapely"], [2, 1, 1, "", "check_str"], [2, 1, 1, "", "print_doc"], [2, 1, 1, "", "process_multi"], [2, 1, 1, "", "progress"], [2, 1, 1, "", "run_once"], [2, 1, 1, "", "timer"]], "ricco.util.district": [[10, 2, 1, "", "District"]], "ricco.util.district.District": [[10, 3, 1, "", "city"], [10, 5, 1, "", "city_list"], [10, 3, 1, "", "city_names"], [10, 3, 1, "", "is_city"], [10, 3, 1, "", "is_region"], [10, 3, 1, "", "province"], [10, 3, 1, "", "province_names"], [10, 5, 1, "", "region_list"]], "ricco.util.dt": [[10, 2, 1, "", "DT"], [10, 2, 1, "", "DT2"], [10, 1, 1, "", "auto2date"], [10, 1, 1, "", "excel2date"], [10, 1, 1, "", "is_valid_date"], [10, 1, 1, "", "to_str"]], "ricco.util.dt.DT": [[10, 3, 1, "", "date_move"], [10, 5, 1, "", "day_half_year_ago"], [10, 5, 1, "", "first_day_of_this_month"], [10, 5, 1, "", "last_day_of_this_month"], [10, 5, 1, "", "monday_of_this_week"], [10, 5, 1, "", "one_year_ago"], [10, 5, 1, "", "the_day_after_tomorrow"], [10, 5, 1, "", "the_day_before_yesterday"], [10, 5, 1, "", "today"], [10, 5, 1, "", "tomorrow"], [10, 5, 1, "", "yesterday"]], "ricco.util.dt.DT2": [[10, 3, 1, "", "date_move"], [10, 5, 1, "", "day_half_year_ago"], [10, 5, 1, "", "first_day_of_this_month"], [10, 3, 1, "", "get"], [10, 5, 1, "", "last_day_of_this_month"], [10, 5, 1, "", "monday_of_this_week"], [10, 5, 1, "", "one_year_ago"], [10, 5, 1, "", "the_day_after_tomorrow"], [10, 5, 1, "", "the_day_before_yesterday"], [10, 5, 1, "", "today"], [10, 5, 1, "", "tomorrow"], [10, 5, 1, "", "yesterday"]], "ricco.util.kdtree": [[10, 1, 1, "", "filter_by_dist"], [10, 1, 1, "", "filter_by_limit"], [10, 1, 1, "", "kdtree_nearest"], [10, 1, 1, "", "kdtree_query"], [10, 1, 1, "", "kdtree_query_radius"]], "ricco.util.os": [[10, 2, 1, "", "OssPath"], [10, 1, 1, "", "count_files"], [10, 1, 1, "", "dir2zip"], [10, 1, 1, "", "dir_iter"], [10, 1, 1, "", "dir_iter_list"], [10, 1, 1, "", "ensure_dir"], [10, 1, 1, "", "ensure_dirpath_exist"], [10, 1, 1, "", "ext"], [10, 1, 1, "", "extension"], [10, 1, 1, "", "file2zip"], [10, 1, 1, "", "find_undefined_dirs"], [10, 1, 1, "", "fn"], [10, 1, 1, "", "path_name"], [10, 1, 1, "", "protect_dir"], [10, 1, 1, "", "remove_ds_store"], [10, 1, 1, "", "remove_path"], [10, 1, 1, "", "rm_scratch_file"], [10, 1, 1, "", "single_ext"], [10, 1, 1, "", "split_path"]], "ricco.util.os.OssPath": [[10, 5, 1, "", "bucket"], [10, 5, 1, "", "driver"], [10, 5, 1, "", "path_full"], [10, 5, 1, "", "path_short"]], "ricco.util.random": [[10, 1, 1, "", "ramdom_lnglat"], [10, 1, 1, "", "random_by_prob"], [10, 1, 1, "", "random_date"], [10, 1, 1, "", "random_name"], [10, 1, 1, "", "random_room_number"]], "ricco.util.strings": [[10, 1, 1, "", "drop_repeat_element"], [10, 1, 1, "", "drop_repeat_string"], [10, 1, 1, "", "drop_repeat_string_by_step"], [10, 1, 1, "", "extract_city"], [10, 1, 1, "", "extract_possible_region"], [10, 1, 1, "", "get_breaks"], [10, 1, 1, "", "get_city_and_region"], [10, 1, 1, "", "get_list_by_position"], [10, 1, 1, "", "get_single_list"]], "ricco.util.util": [[10, 1, 1, "", "and_"], [10, 1, 1, "", "check_diff"], [10, 1, 1, "", "diff"], [10, 1, 1, "", "drop_repeat_element"], [10, 1, 1, "", "eval_"], [10, 1, 1, "", "extract_num"], [10, 1, 1, "", "first_notnull_value"], [10, 1, 1, "", "fix_str"], [10, 1, 1, "", "fuzz_match"], [10, 1, 1, "", "fuzz_pair"], [10, 1, 1, "", "get_city_id_by_name"], [10, 1, 1, "", "get_shortest_element"], [10, 1, 1, "", "get_uuid"], [10, 1, 1, "", "house_type_format"], [10, 1, 1, "", "interchange_dict"], [10, 1, 1, "", "is_digit"], [10, 1, 1, "", "is_hex"], [10, 1, 1, "", "is_unique_series"], [10, 1, 1, "", "is_valid_uuid"], [10, 1, 1, "", "isinstance_in_list"], [10, 1, 1, "", "list2dict"], [10, 1, 1, "", "or_"], [10, 1, 1, "", "per2float"], [10, 1, 1, "", "physical_age"], [10, 1, 1, "", "pinyin"], [10, 1, 1, "", "re_fast"], [10, 1, 1, "", "relstrip"], [10, 1, 1, "", "remove_null_in_dict"], [10, 1, 1, "", "rerstrip"], [10, 1, 1, "", "rstrip_d0"], [10, 1, 1, "", "segment"], [10, 1, 1, "", "sort_by_list"], [10, 1, 1, "", "to_bool"], [10, 1, 1, "", "to_float"], [10, 1, 1, "", "to_json_string"], [10, 1, 1, "", "to_str_list"], [10, 1, 1, "", "union_list_v2"], [10, 1, 1, "", "union_str_v2"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python \u6a21\u5757"], "1": ["py", "function", "Python \u51fd\u6570"], "2": ["py", "class", "Python \u7c7b"], "3": ["py", "method", "Python \u65b9\u6cd5"], "4": ["py", "attribute", "Python \u5c5e\u6027"], "5": ["py", "property", "Python \u6258\u7ba1\u5c5e\u6027"]}, "titleterms": {"extract": 3, "transform": 3, "load": 3, "file": 3, "graph": 3, "geocod": 4, "geodatafram": 5, "ricco": 6, "indic": 6, "and": 6, "tabl": 6, "jupyt": 7, "reshap": 8, "shape": 8, "buffer": 8, "kdtree": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"\u5750\u6807\u8f6c\u6362": [[0, "module-ricco.geometry.coord_trans"]], "\u6570\u636e\u62a5\u544a": [[1, "id1"]], "\u6570\u636e\u6821\u9a8c": [[1, "id2"], [10, "module-ricco.util.assertion"]], "\u88c5\u9970\u5668": [[2, "module-ricco.util.decorator"]], "\u6570\u636e\u8bfb\u53d6\u3001\u5904\u7406\u4e0e\u4fdd\u5b58": [[3, "id1"]], "\u6570\u636e\u8bfb\u53d6\uff08Extract\uff09": [[3, "module-ricco.etl.extract"]], "\u6570\u636e\u5904\u7406\uff08Transform\uff09": [[3, "module-ricco.etl.transformer"]], "\u6570\u636e\u4fdd\u5b58\uff08Load\uff09": [[3, "module-ricco.etl.load"]], "\u6587\u4ef6\u64cd\u4f5c\uff08File\uff09": [[3, "module-ricco.etl.file"]], "\u6570\u636e\u6807\u51c6\u5316\uff08\u71b5\u503c\u6cd5\uff09": [[3, "module-ricco.etl.entropy"]], "\u56fe\u6570\u636e\u5904\u7406\uff08Graph\uff09": [[3, "module-ricco.etl.graph"]], "Geocoding": [[4, "module-ricco.geocode.geocode"]], "\u5730\u7406\u5904\u7406": [[5, "id1"], [8, "id9"]], "\u57fa\u7840\u5730\u7406\u5904\u7406\u5de5\u5177": [[5, "module-ricco.geometry.util"]], "\u57fa\u4e8eGeoDataframe\u5904\u7406": [[5, "module-ricco.geometry.df"]], "\u62d3\u6251\u5904\u7406": [[5, "module-ricco.geometry.topology"]], "ricco \u6587\u6863": [[6, "ricco"]], "\u76ee\u5f55:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "\u5b89\u88c5": [[7, "id1"]], "\u5b89\u88c5\u6b65\u9aa4": [[7, "id2"]], "\u5728jupyter\u4e2d\u5207\u6362\u865a\u62df\u73af\u5883": [[7, "jupyter"]], "\u2605\u2605\u5b9e\u7528\u65b9\u6cd5\u63a8\u8350\u2605\u2605": [[8, "id1"]], "\u6570\u636e\u8bfb\u5199": [[8, "id2"]], "\u8bfb\u53d6\u5355\u4e2a\u6587\u4ef6": [[8, "id3"]], "\u8bfb\u53d6\u6587\u4ef6\u5939": [[8, "id4"]], "\u4fdd\u5b58\u6587\u4ef6": [[8, "id5"]], "\u6587\u4ef6\u5904\u7406": [[8, "id6"]], "\u6587\u4ef6\u62c6\u5206": [[8, "id7"]], "\u6587\u4ef6\u6279\u91cf\u5904\u7406reshape": [[8, "reshape"]], "\u4e07\u80fd\u683c\u5f0f\u8f6c\u6362": [[8, "id8"]], "\u81ea\u52a8\u8f6c\u4e3ashapely\u683c\u5f0f": [[8, "shapely"]], "shapely\u8f6c\u4e3a\u4efb\u610f\u683c\u5f0f": [[8, "id10"], [8, "id11"]], "\u7a7a\u95f4\u8ba1\u7b97": [[8, "id12"]], "\u6295\u5f71\u53d8\u6362": [[8, "id13"]], "\u9762\u79ef\u8ba1\u7b97": [[8, "id14"]], "\u8fd1\u90bb\u5206\u6790": [[8, "id15"]], "buffer\u8ba1\u7b97": [[8, "buffer"]], "\u7a7a\u95f4\u7edf\u8ba1": [[8, "id16"]], "\u7a7a\u95f4\u8fde\u63a5\u6253\u6807\u7b7e": [[8, "id17"]], "\u7edf\u8ba1\u5206\u6790": [[9, "id1"]], "\u63cf\u8ff0\u6027\u7edf\u8ba1": [[9, "module-ricco.etl.stat"]], "\u5de5\u5177\u96c6": [[10, "id1"]], "\u57fa\u7840\u5de5\u5177\u4e00": [[10, "module-ricco.base"]], "\u57fa\u7840\u5de5\u5177\u4e8c": [[10, "module-ricco.util.util"]], "\u65f6\u95f4\u548c\u65e5\u671f": [[10, "module-ricco.util.dt"]], "\u6587\u4ef6\u8def\u5f84": [[10, "module-ricco.util.os"]], "\u5b57\u7b26\u4e32\u5904\u7406": [[10, "module-ricco.util.strings"]], "\u884c\u653f\u533a\u5212\u5de5\u5177": [[10, "id8"]], "\u968f\u673a\u5de5\u5177": [[10, "module-ricco.util.random"]], "Kdtree": [[10, "module-ricco.util.kdtree"]]}, "indexentries": {"srs\uff08ricco.geometry.coord_trans \u4e2d\u7684\u7c7b\uff09": [[0, "ricco.geometry.coord_trans.SRS"]], "bd09\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.bd09"]], "coord_trans_geom()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_trans_geom"]], "coord_trans_x2y()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_trans_x2y"]], "coord_transform_geojson()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_transform_geojson"]], "coord_transformer()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_transformer"]], "gcj02\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.gcj02"]], "module": [[0, "module-ricco.geometry.coord_trans"], [2, "module-ricco.util.decorator"], [3, "module-ricco.etl.entropy"], [3, "module-ricco.etl.extract"], [3, "module-ricco.etl.file"], [3, "module-ricco.etl.graph"], [3, "module-ricco.etl.load"], [3, "module-ricco.etl.transformer"], [4, "module-ricco.geocode.geocode"], [5, "module-ricco.geometry.df"], [5, "module-ricco.geometry.topology"], [5, "module-ricco.geometry.util"], [9, "module-ricco.etl.stat"], [10, "module-ricco.base"], [10, "module-ricco.resource.bd_region"], [10, "module-ricco.util.assertion"], [10, "module-ricco.util.dt"], [10, "module-ricco.util.kdtree"], [10, "module-ricco.util.os"], [10, "module-ricco.util.random"], [10, "module-ricco.util.strings"], [10, "module-ricco.util.util"]], "out_of_china()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.out_of_china"]], "ricco.geometry.coord_trans": [[0, "module-ricco.geometry.coord_trans"]], "wgs84\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.wgs84"]], "datareporter\uff08ricco.etl.data_reporter \u4e2d\u7684\u7c7b\uff09": [[1, "ricco.etl.data_reporter.DataReporter"]], "basic() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.basic"]], "col_by_col() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.col_by_col"]], "examine_all() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.examine_all"]], "preprocess() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.preprocess"]], "as_staticmethod()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.as_staticmethod"]], "check_null()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_null"]], "check_shapely()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_shapely"]], "check_str()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_str"]], "print_doc()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.print_doc"]], "process_multi()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.process_multi"]], "progress()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.progress"]], "ricco.util.decorator": [[2, "module-ricco.util.decorator"]], "run_once()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.run_once"]], "timer()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.timer"]], "entropyclass\uff08ricco.etl.entropy \u4e2d\u7684\u7c7b\uff09": [[3, "ricco.etl.entropy.EntropyClass"]], "convert_date()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.convert_date"]], "convert_to_float()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.convert_to_float"]], "create_columns()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.create_columns"]], "df_iter()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.df_iter"]], "df_iter_by_column()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.df_iter_by_column"]], "dict2df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.dict2df"]], "dir_file_to_x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.dir_file_to_x"]], "drop_by_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.drop_by_df"]], "entropy()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.entropy"]], "expand_dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_dict"]], "expand_dict_silent()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_dict_silent"]], "expand_graph()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_graph"]], "file_to_x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.file_to_x"]], "fillna_by_adding()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fillna_by_adding"]], "filter_by_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.filter_by_df"]], "fix_null()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fix_null"]], "fuzz_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fuzz_df"]], "gdb2csv()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.gdb2csv"]], "get_graph_dict()\uff08\u5728 ricco.etl.graph \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.graph.get_graph_dict"]], "get_kml_df_with_level()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.get_kml_df_with_level"]], "gevalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.gevalue"]], "is_changed()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.is_changed"]], "keep_best_unique()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.keep_best_unique"]], "kml_df_create_level()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.kml_df_create_level"]], "merge_csv_files()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.merge_csv_files"]], "null_if_in()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.null_if_in"]], "pca_score()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.pca_score"]], "pvalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.pvalue"]], "query_from_graph()\uff08\u5728 ricco.etl.graph \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.graph.query_from_graph"]], "rdf()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdf"]], "rdf_by_dir()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdf_by_dir"]], "rdxls()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdxls"]], "read_all_sheets()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_all_sheets"]], "read_csv()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_csv"]], "read_gdb()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_gdb"]], "read_kml()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_kml"]], "read_line_json()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_line_json"]], "read_shapefile()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_shapefile"]], "read_shapefile_with_driver()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_shapefile_with_driver"]], "read_spss()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_spss"]], "rescale()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.rescale"]], "reshape_files()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.reshape_files"]], "ricco.etl.entropy": [[3, "module-ricco.etl.entropy"]], "ricco.etl.extract": [[3, "module-ricco.etl.extract"]], "ricco.etl.file": [[3, "module-ricco.etl.file"]], "ricco.etl.graph": [[3, "module-ricco.etl.graph"]], "ricco.etl.load": [[3, "module-ricco.etl.load"]], "ricco.etl.transformer": [[3, "module-ricco.etl.transformer"]], "rolling_by_month()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.rolling_by_month"]], "round_by_columns()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.round_by_columns"]], "split2x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x"]], "split2x_by_chunksize()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x_by_chunksize"]], "split2x_by_parts()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x_by_parts"]], "split_csv_by_column()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split_csv_by_column"]], "split_list_to_row()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.split_list_to_row"]], "split_to_rows()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.split_to_rows"]], "standard_e()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.standard_e"]], "standard_e_neg()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.standard_e_neg"]], "table2dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.table2dict"]], "to_csv_by_line()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_csv_by_line"]], "to_file()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_file"]], "to_parquet()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_parquet"]], "to_parts_file()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_parts_file"]], "to_sheets()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_sheets"]], "update_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.update_df"]], "wrap_dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.wrap_dict"]], "wvalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.wvalue"]], "geocode()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[4, "ricco.geocode.geocode.geocode"]], "geocode_best()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[4, "ricco.geocode.geocode.geocode_best"]], "geocode_best_address()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[4, "ricco.geocode.geocode.geocode_best_address"]], "geocode_best_poi()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[4, "ricco.geocode.geocode.geocode_best_poi"]], "geocode_df()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[4, "ricco.geocode.geocode.geocode_df"]], "ricco.geocode.geocode": [[4, "module-ricco.geocode.geocode"]], "auto2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.auto2shapely"]], "auto2x()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.auto2x"]], "auto_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.auto_loads"]], "buffer()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.buffer"]], "crs_sh2000()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.crs_sh2000"]], "deg_to_decimal()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.deg_to_decimal"]], "distance()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.distance"]], "distance_gdf()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.distance_gdf"]], "distance_min()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.distance_min"]], "dumps2x()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.dumps2x"]], "ensure_geometry()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.ensure_geometry"]], "ensure_lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.ensure_lnglat"]], "ensure_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.ensure_lnglat"]], "ensure_multi_geom()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.ensure_multi_geom"]], "ensure_valid_polygon()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.ensure_valid_polygon"]], "epsg_from_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.epsg_from_lnglat"]], "filter_polygon_from_collection()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.filter_polygon_from_collection"]], "fix_topology()\uff08\u5728 ricco.geometry.topology \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.topology.fix_topology"]], "geojson2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.geojson2shapely"]], "geojson_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.geojson_dumps"]], "geojson_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.geojson_loads"]], "get_area()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.get_area"]], "get_epsg()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.get_epsg"]], "get_inner_point()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.get_inner_point"]], "get_neighbors()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.get_neighbors"]], "infer_geom_format()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.infer_geom_format"]], "is_geojson()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.is_geojson"]], "is_shapely()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.is_shapely"]], "is_topology_valid()\uff08\u5728 ricco.geometry.topology \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.topology.is_topology_valid"]], "is_valid_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.is_valid_lnglat"]], "is_wkb()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.is_wkb"]], "is_wkt()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.is_wkt"]], "lng_from_city()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.lng_from_city"]], "lnglat2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.lnglat2shapely"]], "lnglat2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.lnglat2wkb"]], "lnglat2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.lnglat2wkt"]], "mark_tags_v2()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.mark_tags_v2"]], "multiline2multipolygon()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.multiline2multipolygon"]], "nearest_kdtree()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.nearest_kdtree"]], "nearest_neighbor()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.nearest_neighbor"]], "projection()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.projection"]], "projection_lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.projection_lnglat"]], "ricco.geometry.df": [[5, "module-ricco.geometry.df"]], "ricco.geometry.topology": [[5, "module-ricco.geometry.topology"]], "ricco.geometry.util": [[5, "module-ricco.geometry.util"]], "shapely2central_shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2central_shapely"]], "shapely2geojson()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2geojson"]], "shapely2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2lnglat"]], "shapely2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2wkb"]], "shapely2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2wkt"]], "shapely2x()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.shapely2x"]], "spatial_agg()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.spatial_agg"]], "split_grids()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.split_grids"]], "split_multi_geoms()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.split_multi_geoms"]], "split_multi_to_rows()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.split_multi_to_rows"]], "text2lnglats()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.text2lnglats"]], "text2shapely()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.text2shapely"]], "wkb2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkb2lnglat"]], "wkb2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkb2shapely"]], "wkb2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkb2wkt"]], "wkb_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.wkb_dumps"]], "wkb_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.wkb_loads"]], "wkt2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkt2lnglat"]], "wkt2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkt2shapely"]], "wkt2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.df.wkt2wkb"]], "wkt_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.wkt_dumps"]], "wkt_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geometry.util.wkt_loads"]], "describe_auto()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[9, "ricco.etl.stat.describe_auto"]], "describe_date()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[9, "ricco.etl.stat.describe_date"]], "describe_object()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[9, "ricco.etl.stat.describe_object"]], "describe_series()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[9, "ricco.etl.stat.describe_series"]], "ricco.etl.stat": [[9, "module-ricco.etl.stat"]], "suspect_series_type()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[9, "ricco.etl.stat.suspect_series_type"]], "dt2\uff08ricco.util.dt \u4e2d\u7684\u7c7b\uff09": [[10, "ricco.util.dt.DT2"]], "dt\uff08ricco.util.dt \u4e2d\u7684\u7c7b\uff09": [[10, "ricco.util.dt.DT"]], "district\uff08ricco.util.district \u4e2d\u7684\u7c7b\uff09": [[10, "ricco.util.district.District"]], "osspath\uff08ricco.util.os \u4e2d\u7684\u7c7b\uff09": [[10, "ricco.util.os.OssPath"]], "agg_parser()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.agg_parser"]], "and_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.and_"]], "assert_columns_exists()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_columns_exists"]], "assert_not_empty_str()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_not_empty_str"]], "assert_not_null()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_not_null"]], "assert_series_digit()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_series_digit"]], "assert_series_not_like()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_series_not_like"]], "assert_series_unique()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_series_unique"]], "assert_subset()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_subset"]], "assert_values_in()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.assert_values_in"]], "auto2date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.dt.auto2date"]], "bucket\uff08ricco.util.os.osspath \u5c5e\u6027\uff09": [[10, "ricco.util.os.OssPath.bucket"]], "check_diff()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.check_diff"]], "cities()\uff08\u5728 ricco.resource.bd_region \u6a21\u5757\u4e2d\uff09": [[10, "ricco.resource.bd_region.cities"]], "city() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.city"]], "city_list\uff08ricco.util.district.district \u5c5e\u6027\uff09": [[10, "ricco.util.district.District.city_list"]], "city_names() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.city_names"]], "city_region_list()\uff08\u5728 ricco.resource.bd_region \u6a21\u5757\u4e2d\uff09": [[10, "ricco.resource.bd_region.city_region_list"]], "count_files()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.count_files"]], "date_move() \uff08ricco.util.dt.dt \u65b9\u6cd5\uff09": [[10, "ricco.util.dt.DT.date_move"]], "date_move() \uff08ricco.util.dt.dt2 \u65b9\u6cd5\uff09": [[10, "ricco.util.dt.DT2.date_move"]], "day_half_year_ago\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.day_half_year_ago"]], "day_half_year_ago\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.day_half_year_ago"]], "diff()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.diff"]], "dir2zip()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.dir2zip"]], "dir_iter()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.dir_iter"]], "dir_iter_list()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.dir_iter_list"]], "driver\uff08ricco.util.os.osspath \u5c5e\u6027\uff09": [[10, "ricco.util.os.OssPath.driver"]], "drop_repeat_element()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.drop_repeat_element"]], "drop_repeat_element()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.drop_repeat_element"]], "drop_repeat_string()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.drop_repeat_string"]], "drop_repeat_string_by_step()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.drop_repeat_string_by_step"]], "ensure_dir()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.ensure_dir"]], "ensure_dirpath_exist()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.ensure_dirpath_exist"]], "ensure_ext()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.ensure_ext"]], "ensure_list()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.ensure_list"]], "eval_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.eval_"]], "excel2date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.dt.excel2date"]], "ext()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.ext"]], "extension()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.extension"]], "extract_city()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.extract_city"]], "extract_num()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.extract_num"]], "extract_possible_region()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.extract_possible_region"]], "file2zip()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.file2zip"]], "filter_by_dist()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.kdtree.filter_by_dist"]], "filter_by_limit()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.kdtree.filter_by_limit"]], "find_undefined_dirs()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.find_undefined_dirs"]], "first_day_of_this_month\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.first_day_of_this_month"]], "first_day_of_this_month\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.first_day_of_this_month"]], "first_notnull_value()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.first_notnull_value"]], "fix_str()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.fix_str"]], "fn()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.fn"]], "fuzz_match()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.fuzz_match"]], "fuzz_pair()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.fuzz_pair"]], "get() \uff08ricco.util.dt.dt2 \u65b9\u6cd5\uff09": [[10, "ricco.util.dt.DT2.get"]], "get_bd_region()\uff08\u5728 ricco.resource.bd_region \u6a21\u5757\u4e2d\uff09": [[10, "ricco.resource.bd_region.get_bd_region"]], "get_breaks()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.get_breaks"]], "get_city_and_region()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.get_city_and_region"]], "get_city_id_by_name()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.get_city_id_by_name"]], "get_list_by_position()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.get_list_by_position"]], "get_shortest_element()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.get_shortest_element"]], "get_single_list()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.strings.get_single_list"]], "get_uuid()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.get_uuid"]], "house_type_format()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.house_type_format"]], "interchange_dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.interchange_dict"]], "is_city() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.is_city"]], "is_digit()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.is_digit"]], "is_empty()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.is_empty"]], "is_hex()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.is_hex"]], "is_region() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.is_region"]], "is_unique_series()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.is_unique_series"]], "is_valid_date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.dt.is_valid_date"]], "is_valid_uuid()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.is_valid_uuid"]], "isinstance_in_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.isinstance_in_list"]], "kdtree_nearest()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.kdtree.kdtree_nearest"]], "kdtree_query()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.kdtree.kdtree_query"]], "kdtree_query_radius()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.kdtree.kdtree_query_radius"]], "last_day_of_this_month\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.last_day_of_this_month"]], "last_day_of_this_month\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.last_day_of_this_month"]], "list2dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.list2dict"]], "monday_of_this_week\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.monday_of_this_week"]], "monday_of_this_week\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.monday_of_this_week"]], "not_empty()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.not_empty"]], "one_year_ago\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.one_year_ago"]], "one_year_ago\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.one_year_ago"]], "or_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.or_"]], "path_full\uff08ricco.util.os.osspath \u5c5e\u6027\uff09": [[10, "ricco.util.os.OssPath.path_full"]], "path_name()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.path_name"]], "path_short\uff08ricco.util.os.osspath \u5c5e\u6027\uff09": [[10, "ricco.util.os.OssPath.path_short"]], "per2float()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.per2float"]], "physical_age()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.physical_age"]], "pinyin()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.pinyin"]], "protect_dir()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.protect_dir"]], "province() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.province"]], "province_names() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[10, "ricco.util.district.District.province_names"]], "ramdom_lnglat()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.random.ramdom_lnglat"]], "random_by_prob()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.random.random_by_prob"]], "random_date()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.random.random_date"]], "random_name()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.random.random_name"]], "random_room_number()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.random.random_room_number"]], "re_fast()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.re_fast"]], "region_list\uff08ricco.util.district.district \u5c5e\u6027\uff09": [[10, "ricco.util.district.District.region_list"]], "regions()\uff08\u5728 ricco.resource.bd_region \u6a21\u5757\u4e2d\uff09": [[10, "ricco.resource.bd_region.regions"]], "relstrip()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.relstrip"]], "remove_ds_store()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.remove_ds_store"]], "remove_null_in_dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.remove_null_in_dict"]], "remove_path()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.remove_path"]], "rerstrip()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.rerstrip"]], "ricco.base": [[10, "module-ricco.base"]], "ricco.resource.bd_region": [[10, "module-ricco.resource.bd_region"]], "ricco.util.assertion": [[10, "module-ricco.util.assertion"]], "ricco.util.dt": [[10, "module-ricco.util.dt"]], "ricco.util.kdtree": [[10, "module-ricco.util.kdtree"]], "ricco.util.os": [[10, "module-ricco.util.os"]], "ricco.util.random": [[10, "module-ricco.util.random"]], "ricco.util.strings": [[10, "module-ricco.util.strings"]], "ricco.util.util": [[10, "module-ricco.util.util"]], "rm_scratch_file()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.rm_scratch_file"]], "rstrip_d0()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.rstrip_d0"]], "second_to_desc()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.second_to_desc"]], "second_to_dhms()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.second_to_dhms"]], "segment()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.segment"]], "single_ext()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.single_ext"]], "skip_column()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.assertion.skip_column"]], "sort_by_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.sort_by_list"]], "split_path()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.os.split_path"]], "the_day_after_tomorrow\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.the_day_after_tomorrow"]], "the_day_after_tomorrow\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.the_day_after_tomorrow"]], "the_day_before_yesterday\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.the_day_before_yesterday"]], "the_day_before_yesterday\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.the_day_before_yesterday"]], "to_bool()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.to_bool"]], "to_float()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.to_float"]], "to_json_string()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.to_json_string"]], "to_str()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.dt.to_str"]], "to_str_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.to_str_list"]], "today\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.today"]], "today\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.today"]], "tomorrow\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.tomorrow"]], "tomorrow\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.tomorrow"]], "union_list_v2()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.union_list_v2"]], "union_str_v2()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[10, "ricco.util.util.union_str_v2"]], "warn_()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[10, "ricco.base.warn_"]], "yesterday\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT.yesterday"]], "yesterday\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[10, "ricco.util.dt.DT2.yesterday"]]}})